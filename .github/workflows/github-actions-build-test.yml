name: GitHub Actions Build Test
on: [push, pull_request]
jobs:
  Build-Sparlay-Dialect:
    name: Build and Test
    runs-on: ${{ matrix.config.os }}
    
    strategy:
      matrix:
        config:
          - { name: "Ubuntu-clang", os: ubuntu-latest, cc: "clang", cxx: "clang++" }

    steps:
      - uses: hmarr/debug-action@v2
      - name: add dependencies
        run: |
          sudo apt-get install libeigen3-dev
          ls /usr/local/include/
          echo $CPATH
      #   run: sudo apt-get install -y ninja-build
      
      - name: Check out repository code
        uses: actions/checkout@v3
      
      - name: Get Date
        id: get-date
        run: echo "::set-output name=date::$(/bin/date -u "+%Y%m%d")"

      - name: Cache MLIR 
        id: cache-mlir
        uses: actions/cache@v3
        with:
          path: llvm-project/build
          key: ${{ matrix.config.os }}-mlir-${{ steps.get-date.outputs.date }}

      - name: Build MLIR
        if: steps.cache-mlir.outputs.cache-hit != 'true'
        run: |
          git clone https://github.com/llvm/llvm-project.git;
          cd llvm-project
          git checkout tags/llvmorg-15.0.0-rc1
          mkdir -p build && cd build
          cmake ../llvm -DLLVM_ENABLE_PROJECTS="clang;lld;mlir" \
            -DLLVM_BUILD_EXAMPLES=ON -DLLVM_TARGETS_TO_BUILD="X86" \
            -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_ASSERTIONS=ON \
            -DLLVM_INSTALL_UTILS=ON -DLLVM_BUILD_UTILS=ON \
            -DLLVM_USE_LINKER=lld \
            -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++
          cmake --build . -j $(nproc);

      - name: Build Sparlay
        run: |
          mkdir -p build
          cd build
          cmake .. \
            -DMLIR_DIR="$PWD/../llvm-project/build/lib/cmake/mlir" \
            -DLLVM_EXTERNAL_LIT="$PWD/../llvm-project/build/bin/llvm-lit" \
            -DLLVM_ENABLE_ASSERTIONS=ON \
            -DCMAKE_BUILD_TYPE=RELEASE \
            -DLLVM_USE_LINKER=lld \
            -DCMAKE_C_COMPILER=clang \
            -DCMAKE_CXX_COMPILER=clang++
          cmake --build . -j $(nproc)
      # - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      # - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      # - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      # - name: Check out repository code
      #   uses: actions/checkout@v3
      # - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      # - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      # - name: List files in the repository
      #   run: |
      #     ls ${{ github.workspace }}
      # - run: echo "üçè This job's status is ${{ job.status }}."
