name: GitHub Actions Build Test
on: [push, pull_request]
jobs:
  Build-UniSparse-Dialect:
    name: Build and Test
    runs-on: ${{ matrix.config.os }}
    
    strategy:
      matrix:
        config:
          - { name: "Ubuntu-clang", os: ubuntu-latest, cc: "clang", cxx: "clang++" }
    
    container: 
      image: sibylau/mlir-llvm:omp

    steps:   
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Build UniSparse
        run: |
          mkdir -p build && cd build
          export CPATH=/install/eigen-3.4.0:/install/llvm-project/mlir/lib:$CPATH
          export CPATH=/install/llvm-project/mlir/include/mlir:$CPATH
          export PATH=/install/llvm-project/build/bin:$PATH
          export CPATH=/install/llvm-project/openmp/build/runtime/src:$CPATH
          export LD_LIBRARY_PATH=/install/llvm-project/openmp/build/runtime/src:$LD_LIBRARY_PATH
          cmake .. \
            -DMLIR_DIR="/install/llvm-project/build/lib/cmake/mlir" \
            -DLLVM_DIR="/install/llvm-project/build/lib/cmake/llvm" \
            -DLLVM_BUILD_LIBRARY_DIR="/install/llvm-project/build" \
            -DLLVM_EXTERNAL_LIT="/install/llvm-project/build/bin/llvm-lit" \
            -DEXTERNAL_INCLUDE_DIRS="/install/eigen-3.4.0" \
            -DMLIR_LIB_DIR="/install/llvm-project/mlir/lib" \
            -DLLVM_ENABLE_ASSERTIONS=ON \
            -DCMAKE_BUILD_TYPE=RELEASE \
            -DLLVM_USE_LINKER=lld \
            -DCMAKE_C_COMPILER=clang \
            -DCMAKE_CXX_COMPILER=clang++
          cmake --build . -j $(nproc)

      # - name: Check UniSparse
      #   run: |
      #     cmake --build . --target check-unisparse -j $(nproc)
