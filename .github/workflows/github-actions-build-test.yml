name: GitHub Actions Build Test
on: [push, pull_request]
jobs:
  Build-Sparlay-Dialect:
    name: Build and Test
    runs-on: ${{ matrix.config.os }}
    
    strategy:
      matrix:
        config:
          - { name: "Ubuntu-clang", os: ubuntu-latest, cc: "clang", cxx: "clang++" }

    steps:    
      # - name: Get LLVM Hash
      #   id: get-llvm-hash
      #   run: echo "::set-output name=hash::$(git -C ./polygeist rev-parse @:./llvm-project)"

      - name: Cache MLIR 
        id: cache-mlir
        uses: actions/cache@v3
        env:
          cache-name: cache-llvm-build
        with:
          path: ~/llvm-project/build
          key: ${{ matrix.config.os }}-${{ env.cache-name }}-${{ hashFiles('~/llvm-project') }}
          restore-keys: |
            ${{ matrix.config.os }}-${{ env.cache-name }}-
            ${{ matrix.config.os }}-

      - name: Build MLIR and add dependencies
        if: steps.cache-mlir.outputs.cache-hit != 'true'
        run: |
          cd ~
          wget https://gitlab.com/libeigen/eigen/-/archive/3.4.0/eigen-3.4.0.tar.gz
          tar -xzf eigen-3.4.0.tar.gz && rm eigen-3.4.0.tar.gz
          echo "ðŸ”Ž cd eigen-3.4.0 && ls: "
          cd eigen-3.4.0 && ls
          echo "ðŸ”Ž CPATH: "
          export CPATH=$PWD:$CPATH && echo $CPATH
          echo "ðŸ”Ž cd $PWD/Eigen && pwd && ls: "
          cd $PWD/Eigen && pwd && ls
          echo "ðŸ”Ž cd ../../ && pwd && ls: "
          cd ../../ && pwd && ls
          git clone https://github.com/llvm/llvm-project.git;
          cd llvm-project && git checkout tags/llvmorg-15.0.0-rc1
          mkdir -p build && cd build
          cmake ../llvm -DLLVM_ENABLE_PROJECTS="clang;lld;mlir" \
            -DLLVM_BUILD_EXAMPLES=ON -DLLVM_TARGETS_TO_BUILD="X86" \
            -DLLVM_TARGETS_TO_BUILD="host" \
            -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_ASSERTIONS=ON \
            -DLLVM_INSTALL_UTILS=ON -DLLVM_BUILD_UTILS=ON \
            -DLLVM_USE_LINKER=lld \
            -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++
          cmake --build . -j $(nproc)

      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Build Sparlay
        run: |
          mkdir -p build && cd build
          export CPATH=$PWD/../../../eigen-3.4.0:~/llvm-project/mlir/lib:$CPATH
          export CPATH=~/llvm-project/mlir/include/mlir:$CPATH
          echo "ðŸ”Ž CPATH: " && echo $CPATH
          echo "ðŸ”Ž ls ~ && ls ~/llvm-project && ls ~/llvm-project/mlir && ls ~/llvm-project/build/lib/cmake: "
          ls ~ && ls ~/llvm-project && ls ~/llvm-project/mlir && ls ~/llvm-project/build/lib/cmake
          echo "ðŸ”Ž find ~ -name eigen: "
          find ~ -name "eigen*"
          echo "ðŸ”Ž $PWD/../../../eigen-3.4.0: "
          ls $PWD/../../../eigen-3.4.0
          cmake .. \
            -DMLIR_DIR="~/llvm-project/build/lib/cmake/mlir" \
            -DLLVM_DIR="~/llvm-project/build/lib/cmake/llvm" \
            -DLLVM_BUILD_LIBRARY_DIR="~/llvm-project/build" \
            -DLLVM_EXTERNAL_LIT="~/llvm-project/build/bin/llvm-lit" \
            -DEXTERNAL_INCLUDE_DIRS="$PWD/../../../eigen-3.4.0" \
            -DMLIR_LIB_DIR="~/llvm-project/mlir/lib" \
            -DLLVM_ENABLE_ASSERTIONS=ON \
            -DCMAKE_BUILD_TYPE=RELEASE \
            -DLLVM_USE_LINKER=lld \
            -DCMAKE_C_COMPILER=clang \
            -DCMAKE_CXX_COMPILER=clang++
          cmake --build . -j $(nproc)
